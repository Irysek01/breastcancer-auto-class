# -*- coding: utf-8 -*-
"""03_feature-extraction_shared.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AhoLJOBqOcNg6m_qmIHV12e_OhmgK6wJ
"""

import os
import numpy as np
import pandas as pd

"""##Principal Components Analysis"""

from numpy.linalg import eig

def pca_custom(data, k=1):
  Obs = [...] # Rows of data correspond to observations

  [...]

  pca_data = [...]

  return pca_data, data_mean, eigenvectors, eigenvalues, covariance_matrix, Obs, data_zero_mean

arr = np.array([[2.5, 2.4], [0.5, 0.7], [2.2, 2.9], [1.9, 2.2], [3.1, 3.0], [2.3, 2.7], [2, 1.6], [1, 1.1], [1.5, 1.6], [1.1, 0.9]])
print(arr)

pca_data, data_mean, V, W, L, Obs, data_zero_mean = pca_custom(arr, 2)

# MIN/MAX
print(np.amin(pca_data))
print(np.amax(pca_data))

print(pca_data)
print(data_mean)
print(V)
print(Obs)

import numpy as np
from matplotlib import pyplot as plt

# Scatter plot
plt.scatter(pca_data[:, 0], pca_data[:, 1], cmap='hot')

# Display the plot
plt.show()

"""## PCA using available libraries..."""

from sklearn.decomposition import PCA

pca = PCA(n_components=2)

pca_data_function_example = pca.fit_transform(arr)

print('Shape before PCA: ', arr.shape)
print('Shape after PCA: ', pca_data_function_example.shape)

print(pca_data_function_example[0,:])

print(pca_data[0,:]) # For comparison

import numpy as np
from matplotlib import pyplot as plt

# Scatter plot
plt.scatter(pca_data_function_example[:, 0], pca_data_function_example[:, 1], cmap='hot')

# Display the plot
plt.show()